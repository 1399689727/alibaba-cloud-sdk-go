package aas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) GetBasicInfoForAccount(request *GetBasicInfoForAccountRequest) (response *GetBasicInfoForAccountResponse, err error) {
	response = CreateGetBasicInfoForAccountResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) GetBasicInfoForAccountWithChan(request *GetBasicInfoForAccountRequest) (<-chan *GetBasicInfoForAccountResponse, <-chan error) {
	responseChan := make(chan *GetBasicInfoForAccountResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetBasicInfoForAccount(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) GetBasicInfoForAccountWithCallback(request *GetBasicInfoForAccountRequest, callback func(response *GetBasicInfoForAccountResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetBasicInfoForAccountResponse
		var err error
		defer close(result)
		response, err = client.GetBasicInfoForAccount(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type GetBasicInfoForAccountRequest struct {
	*requests.RpcRequest
	AliyunId string `position:"Query" name:"AliyunId"`
}

type GetBasicInfoForAccountResponse struct {
	*responses.BaseResponse
	RequestId     string `json:"RequestId" xml:"RequestId"`
	PK            string `json:"PK" xml:"PK"`
	LastLoginDate string `json:"LastLoginDate" xml:"LastLoginDate"`
	AccountStatus string `json:"AccountStatus" xml:"AccountStatus"`
}

func CreateGetBasicInfoForAccountRequest() (request *GetBasicInfoForAccountRequest) {
	request = &GetBasicInfoForAccountRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Aas", "2015-07-01", "GetBasicInfoForAccount", "", "")
	return
}

func CreateGetBasicInfoForAccountResponse() (response *GetBasicInfoForAccountResponse) {
	response = &GetBasicInfoForAccountResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
