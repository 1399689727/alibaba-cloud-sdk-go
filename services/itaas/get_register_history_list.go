package itaas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) GetRegisterHistoryList(request *GetRegisterHistoryListRequest) (response *GetRegisterHistoryListResponse, err error) {
	response = CreateGetRegisterHistoryListResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) GetRegisterHistoryListWithChan(request *GetRegisterHistoryListRequest) (<-chan *GetRegisterHistoryListResponse, <-chan error) {
	responseChan := make(chan *GetRegisterHistoryListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetRegisterHistoryList(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) GetRegisterHistoryListWithCallback(request *GetRegisterHistoryListRequest, callback func(response *GetRegisterHistoryListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetRegisterHistoryListResponse
		var err error
		defer close(result)
		response, err = client.GetRegisterHistoryList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type GetRegisterHistoryListRequest struct {
	*requests.RpcRequest
	AuthType string `position:"Query" name:"AuthType"`
	SysFrom  string `position:"Query" name:"SysFrom"`
	Operator string `position:"Query" name:"Operator"`
}

type GetRegisterHistoryListResponse struct {
	*responses.BaseResponse
	RequestId    string `json:"RequestId" xml:"RequestId"`
	Success      bool   `json:"Success" xml:"Success"`
	BusinessCode string `json:"BusinessCode" xml:"BusinessCode"`
	Message      string `json:"Message" xml:"Message"`
	ResultData   []struct {
		CreateTimeL  int64  `json:"CreateTimeL" xml:"CreateTimeL"`
		DrIp         string `json:"DrIp" xml:"DrIp"`
		DrMac        string `json:"DrMac" xml:"DrMac"`
		DrName       string `json:"DrName" xml:"DrName"`
		EventInfo    string `json:"EventInfo" xml:"EventInfo"`
		EventType    int    `json:"EventType" xml:"EventType"`
		EventTypeTxt string `json:"EventTypeTxt" xml:"EventTypeTxt"`
		Memo         string `json:"Memo" xml:"Memo"`
		ScreenCode   string `json:"ScreenCode" xml:"ScreenCode"`
	} `json:"ResultData" xml:"ResultData"`
}

func CreateGetRegisterHistoryListRequest() (request *GetRegisterHistoryListRequest) {
	request = &GetRegisterHistoryListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ITaaS", "2017-05-12", "GetRegisterHistoryList", "", "")
	return
}

func CreateGetRegisterHistoryListResponse() (response *GetRegisterHistoryListResponse) {
	response = &GetRegisterHistoryListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
