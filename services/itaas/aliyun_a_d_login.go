package itaas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) AliyunADLogin(request *AliyunADLoginRequest) (response *AliyunADLoginResponse, err error) {
	response = CreateAliyunADLoginResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) AliyunADLoginWithChan(request *AliyunADLoginRequest) (<-chan *AliyunADLoginResponse, <-chan error) {
	responseChan := make(chan *AliyunADLoginResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.AliyunADLogin(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) AliyunADLoginWithCallback(request *AliyunADLoginRequest, callback func(response *AliyunADLoginResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *AliyunADLoginResponse
		var err error
		defer close(result)
		response, err = client.AliyunADLogin(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type AliyunADLoginRequest struct {
	*requests.RpcRequest
	AuthType      string `position:"Query" name:"AuthType"`
	OsType        string `position:"Query" name:"OsType"`
	AppVersion    string `position:"Query" name:"AppVersion"`
	SecurityToken string `position:"Query" name:"SecurityToken"`
	DeviceId      string `position:"Query" name:"DeviceId"`
}

type AliyunADLoginResponse struct {
	*responses.BaseResponse
	RequestId    string `json:"RequestId" xml:"RequestId"`
	Success      bool   `json:"Success" xml:"Success"`
	Code         string `json:"Code" xml:"Code"`
	BusinessCode string `json:"BusinessCode" xml:"BusinessCode"`
	Message      string `json:"Message" xml:"Message"`
	ResultData   struct {
		Id           string `json:"Id" xml:"Id"`
		Rid          string `json:"Rid" xml:"Rid"`
		Uid          int64  `json:"Uid" xml:"Uid"`
		ProcessToken string `json:"ProcessToken" xml:"ProcessToken"`
		TokenKey     string `json:"TokenKey" xml:"TokenKey"`
		AgreeURL     string `json:"AgreeURL" xml:"AgreeURL"`
		CInfo        struct {
			Cid      string `json:"Cid" xml:"Cid"`
			AuthType int    `json:"AuthType" xml:"AuthType"`
			Cname    string `json:"Cname" xml:"Cname"`
		} `json:"CInfo" xml:"CInfo"`
		UserInfo struct {
			Id          int    `json:"Id" xml:"Id"`
			GmtCreate   int    `json:"GmtCreate" xml:"GmtCreate"`
			GmtModified int    `json:"GmtModified" xml:"GmtModified"`
			Cid         string `json:"Cid" xml:"Cid"`
			Uid         bool   `json:"Uid" xml:"Uid"`
			AdAccount   string `json:"AdAccount" xml:"AdAccount"`
			AdDomain    string `json:"AdDomain" xml:"AdDomain"`
			Email       string `json:"Email" xml:"Email"`
			MobilePhone string `json:"MobilePhone" xml:"MobilePhone"`
			StateCode   bool   `json:"StateCode" xml:"StateCode"`
			Nick        string `json:"Nick" xml:"Nick"`
			NickPinyin  string `json:"NickPinyin" xml:"NickPinyin"`
			Gender      string `json:"Gender" xml:"Gender"`
			Status      int    `json:"Status" xml:"Status"`
		} `json:"UserInfo" xml:"UserInfo"`
	} `json:"ResultData" xml:"ResultData"`
}

func CreateAliyunADLoginRequest() (request *AliyunADLoginRequest) {
	request = &AliyunADLoginRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ITaaS", "2017-05-12", "AliyunADLogin", "", "")
	return
}

func CreateAliyunADLoginResponse() (response *AliyunADLoginResponse) {
	response = &AliyunADLoginResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
