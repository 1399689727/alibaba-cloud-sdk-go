package itaas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) TrustDeviceDeleteClient(request *TrustDeviceDeleteClientRequest) (response *TrustDeviceDeleteClientResponse, err error) {
	response = CreateTrustDeviceDeleteClientResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) TrustDeviceDeleteClientWithChan(request *TrustDeviceDeleteClientRequest) (<-chan *TrustDeviceDeleteClientResponse, <-chan error) {
	responseChan := make(chan *TrustDeviceDeleteClientResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.TrustDeviceDeleteClient(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) TrustDeviceDeleteClientWithCallback(request *TrustDeviceDeleteClientRequest, callback func(response *TrustDeviceDeleteClientResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *TrustDeviceDeleteClientResponse
		var err error
		defer close(result)
		response, err = client.TrustDeviceDeleteClient(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type TrustDeviceDeleteClientRequest struct {
	*requests.RpcRequest
	Uid           string `position:"Query" name:"Uid"`
	AuthType      string `position:"Query" name:"AuthType"`
	Sid           string `position:"Query" name:"Sid"`
	OsType        string `position:"Query" name:"OsType"`
	AppName       string `position:"Query" name:"AppName"`
	QueryUmid     string `position:"Query" name:"QueryUmid"`
	AppVersion    string `position:"Query" name:"AppVersion"`
	Language      string `position:"Query" name:"Language"`
	Cid           string `position:"Query" name:"Cid"`
	Umid          string `position:"Query" name:"Umid"`
	SecurityToken string `position:"Query" name:"SecurityToken"`
}

type TrustDeviceDeleteClientResponse struct {
	*responses.BaseResponse
	RequestId    string `json:"RequestId" xml:"RequestId"`
	Success      bool   `json:"Success" xml:"Success"`
	Code         string `json:"Code" xml:"Code"`
	BusinessCode string `json:"BusinessCode" xml:"BusinessCode"`
	Message      string `json:"Message" xml:"Message"`
	ResultData   struct {
		AdRefreshTokenId string `json:"AdRefreshTokenId" xml:"AdRefreshTokenId"`
	} `json:"ResultData" xml:"ResultData"`
}

func CreateTrustDeviceDeleteClientRequest() (request *TrustDeviceDeleteClientRequest) {
	request = &TrustDeviceDeleteClientRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("ITaaS", "2017-05-12", "TrustDeviceDeleteClient", "", "")
	return
}

func CreateTrustDeviceDeleteClientResponse() (response *TrustDeviceDeleteClientResponse) {
	response = &TrustDeviceDeleteClientResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
