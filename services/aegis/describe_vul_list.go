package aegis

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeVulList(request *DescribeVulListRequest) (response *DescribeVulListResponse, err error) {
	response = CreateDescribeVulListResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeVulListWithChan(request *DescribeVulListRequest) (<-chan *DescribeVulListResponse, <-chan error) {
	responseChan := make(chan *DescribeVulListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeVulList(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeVulListWithCallback(request *DescribeVulListRequest, callback func(response *DescribeVulListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeVulListResponse
		var err error
		defer close(result)
		response, err = client.DescribeVulList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeVulListRequest struct {
	*requests.RpcRequest
	SourceIp        string           `position:"Query" name:"SourceIp"`
	ResourceOwnerId requests.Integer `position:"Query" name:"ResourceOwnerId"`
	Type            string           `position:"Query" name:"Type"`
	Uuids           string           `position:"Query" name:"Uuids"`
	Name            string           `position:"Query" name:"Name"`
	PatchId         requests.Integer `position:"Query" name:"PatchId"`
	Level           string           `position:"Query" name:"Level"`
	Product         string           `position:"Query" name:"Product"`
	LastTsStart     requests.Integer `position:"Query" name:"LastTsStart"`
	LastTsEnd       requests.Integer `position:"Query" name:"LastTsEnd"`
	StatusList      string           `position:"Query" name:"StatusList"`
	OrderBy         string           `position:"Query" name:"OrderBy"`
	Direction       string           `position:"Query" name:"Direction"`
	AliasName       string           `position:"Query" name:"AliasName"`
	BatchName       string           `position:"Query" name:"BatchName"`
	Resource        string           `position:"Query" name:"Resource"`
	Necessity       string           `position:"Query" name:"Necessity"`
	Dealed          string           `position:"Query" name:"Dealed"`
	Lang            string           `position:"Query" name:"Lang"`
	CurrentPage     requests.Integer `position:"Query" name:"CurrentPage"`
	PageSize        requests.Integer `position:"Query" name:"PageSize"`
}

type DescribeVulListResponse struct {
	*responses.BaseResponse
	RequestId   string   `json:"RequestId" xml:"RequestId"`
	Count       int      `json:"Count" xml:"Count"`
	PageSize    int      `json:"PageSize" xml:"PageSize"`
	CurrentPage int      `json:"CurrentPage" xml:"CurrentPage"`
	TotalCount  int      `json:"TotalCount" xml:"TotalCount"`
	VulRecords  []string `json:"VulRecords" xml:"VulRecords"`
}

func CreateDescribeVulListRequest() (request *DescribeVulListRequest) {
	request = &DescribeVulListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("aegis", "2016-11-11", "DescribeVulList", "vipaegis", "openAPI")
	return
}

func CreateDescribeVulListResponse() (response *DescribeVulListResponse) {
	response = &DescribeVulListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
