package emr

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ModifyExecutionPlanScheduleInfo(request *ModifyExecutionPlanScheduleInfoRequest) (response *ModifyExecutionPlanScheduleInfoResponse, err error) {
	response = CreateModifyExecutionPlanScheduleInfoResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ModifyExecutionPlanScheduleInfoWithChan(request *ModifyExecutionPlanScheduleInfoRequest) (<-chan *ModifyExecutionPlanScheduleInfoResponse, <-chan error) {
	responseChan := make(chan *ModifyExecutionPlanScheduleInfoResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ModifyExecutionPlanScheduleInfo(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ModifyExecutionPlanScheduleInfoWithCallback(request *ModifyExecutionPlanScheduleInfoRequest, callback func(response *ModifyExecutionPlanScheduleInfoResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ModifyExecutionPlanScheduleInfoResponse
		var err error
		defer close(result)
		response, err = client.ModifyExecutionPlanScheduleInfo(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ModifyExecutionPlanScheduleInfoRequest struct {
	*requests.RpcRequest
	Id              string `position:"Query" name:"Id"`
	TimeInterval    string `position:"Query" name:"TimeInterval"`
	DayOfMonth      string `position:"Query" name:"DayOfMonth"`
	StartTime       string `position:"Query" name:"StartTime"`
	TimeUnit        string `position:"Query" name:"TimeUnit"`
	Strategy        string `position:"Query" name:"Strategy"`
	DayOfWeek       string `position:"Query" name:"DayOfWeek"`
	ResourceOwnerId string `position:"Query" name:"ResourceOwnerId"`
}

type ModifyExecutionPlanScheduleInfoResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

func CreateModifyExecutionPlanScheduleInfoRequest() (request *ModifyExecutionPlanScheduleInfoRequest) {
	request = &ModifyExecutionPlanScheduleInfoRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Emr", "2016-04-08", "ModifyExecutionPlanScheduleInfo", "", "")
	return
}

func CreateModifyExecutionPlanScheduleInfoResponse() (response *ModifyExecutionPlanScheduleInfoResponse) {
	response = &ModifyExecutionPlanScheduleInfoResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
