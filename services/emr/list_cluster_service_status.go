package emr

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ListClusterServiceStatus(request *ListClusterServiceStatusRequest) (response *ListClusterServiceStatusResponse, err error) {
	response = CreateListClusterServiceStatusResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ListClusterServiceStatusWithChan(request *ListClusterServiceStatusRequest) (<-chan *ListClusterServiceStatusResponse, <-chan error) {
	responseChan := make(chan *ListClusterServiceStatusResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListClusterServiceStatus(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ListClusterServiceStatusWithCallback(request *ListClusterServiceStatusRequest, callback func(response *ListClusterServiceStatusResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListClusterServiceStatusResponse
		var err error
		defer close(result)
		response, err = client.ListClusterServiceStatus(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ListClusterServiceStatusRequest struct {
	*requests.RpcRequest
	ClusterId       string `position:"Query" name:"ClusterId"`
	ServiceName     string `position:"Query" name:"ServiceName"`
	ResourceOwnerId string `position:"Query" name:"ResourceOwnerId"`
}

type ListClusterServiceStatusResponse struct {
	*responses.BaseResponse
	RequestId                string `json:"RequestId" xml:"RequestId"`
	ClusterServiceStatusList []struct {
		NodeIp string `json:"NodeIp" xml:"NodeIp"`
		Status string `json:"Status" xml:"Status"`
	} `json:"ClusterServiceStatusList" xml:"ClusterServiceStatusList"`
}

func CreateListClusterServiceStatusRequest() (request *ListClusterServiceStatusRequest) {
	request = &ListClusterServiceStatusRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Emr", "2016-04-08", "ListClusterServiceStatus", "", "")
	return
}

func CreateListClusterServiceStatusResponse() (response *ListClusterServiceStatusResponse) {
	response = &ListClusterServiceStatusResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
