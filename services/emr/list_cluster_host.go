package emr

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ListClusterHost(request *ListClusterHostRequest) (response *ListClusterHostResponse, err error) {
	response = CreateListClusterHostResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ListClusterHostWithChan(request *ListClusterHostRequest) (<-chan *ListClusterHostResponse, <-chan error) {
	responseChan := make(chan *ListClusterHostResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListClusterHost(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ListClusterHostWithCallback(request *ListClusterHostRequest, callback func(response *ListClusterHostResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListClusterHostResponse
		var err error
		defer close(result)
		response, err = client.ListClusterHost(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ListClusterHostRequest struct {
	*requests.RpcRequest
	PageSize        string `position:"Query" name:"PageSize"`
	PrivateIp       string `position:"Query" name:"PrivateIp"`
	HostInstanceId  string `position:"Query" name:"HostInstanceId"`
	PageNumber      string `position:"Query" name:"PageNumber"`
	ClusterId       string `position:"Query" name:"ClusterId"`
	HostName        string `position:"Query" name:"HostName"`
	ComponentName   string `position:"Query" name:"ComponentName"`
	ResourceOwnerId string `position:"Query" name:"ResourceOwnerId"`
}

type ListClusterHostResponse struct {
	*responses.BaseResponse
	RequestId  string `json:"RequestId" xml:"RequestId"`
	PageNumber int    `json:"PageNumber" xml:"PageNumber"`
	PageSize   int    `json:"PageSize" xml:"PageSize"`
	Total      int    `json:"Total" xml:"Total"`
	HostList   []struct {
		HostId         string `json:"HostId" xml:"HostId"`
		HostName       string `json:"HostName" xml:"HostName"`
		PublicIp       string `json:"PublicIp" xml:"PublicIp"`
		PrivateIp      string `json:"PrivateIp" xml:"PrivateIp"`
		Role           string `json:"Role" xml:"Role"`
		InstanceType   string `json:"InstanceType" xml:"InstanceType"`
		Cpu            int    `json:"Cpu" xml:"Cpu"`
		Memory         int    `json:"Memory" xml:"Memory"`
		Status         string `json:"Status" xml:"Status"`
		Type           string `json:"Type" xml:"Type"`
		HostInstanceId string `json:"HostInstanceId" xml:"HostInstanceId"`
		SerialNumber   string `json:"SerialNumber" xml:"SerialNumber"`
	} `json:"HostList" xml:"HostList"`
}

func CreateListClusterHostRequest() (request *ListClusterHostRequest) {
	request = &ListClusterHostRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Emr", "2016-04-08", "ListClusterHost", "", "")
	return
}

func CreateListClusterHostResponse() (response *ListClusterHostResponse) {
	response = &ListClusterHostResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
