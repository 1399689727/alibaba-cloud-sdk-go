package emr

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ListClusterServiceConfigVersion(request *ListClusterServiceConfigVersionRequest) (response *ListClusterServiceConfigVersionResponse, err error) {
	response = CreateListClusterServiceConfigVersionResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ListClusterServiceConfigVersionWithChan(request *ListClusterServiceConfigVersionRequest) (<-chan *ListClusterServiceConfigVersionResponse, <-chan error) {
	responseChan := make(chan *ListClusterServiceConfigVersionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListClusterServiceConfigVersion(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ListClusterServiceConfigVersionWithCallback(request *ListClusterServiceConfigVersionRequest, callback func(response *ListClusterServiceConfigVersionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListClusterServiceConfigVersionResponse
		var err error
		defer close(result)
		response, err = client.ListClusterServiceConfigVersion(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ListClusterServiceConfigVersionRequest struct {
	*requests.RpcRequest
	PageSize        string `position:"Query" name:"PageSize"`
	PageNumber      string `position:"Query" name:"PageNumber"`
	ClusterId       string `position:"Query" name:"ClusterId"`
	ServiceName     string `position:"Query" name:"ServiceName"`
	ResourceOwnerId string `position:"Query" name:"ResourceOwnerId"`
}

type ListClusterServiceConfigVersionResponse struct {
	*responses.BaseResponse
	RequestId         string `json:"RequestId" xml:"RequestId"`
	PageNumber        int    `json:"PageNumber" xml:"PageNumber"`
	PageSize          int    `json:"PageSize" xml:"PageSize"`
	TotalCount        int    `json:"TotalCount" xml:"TotalCount"`
	ConfigVersionList []struct {
		ConfigVersion string `json:"ConfigVersion" xml:"ConfigVersion"`
		Applied       bool   `json:"Applied" xml:"Applied"`
		CreateTime    int64  `json:"CreateTime" xml:"CreateTime"`
		Author        string `json:"Author" xml:"Author"`
		Comment       string `json:"Comment" xml:"Comment"`
	} `json:"ConfigVersionList" xml:"ConfigVersionList"`
}

func CreateListClusterServiceConfigVersionRequest() (request *ListClusterServiceConfigVersionRequest) {
	request = &ListClusterServiceConfigVersionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Emr", "2016-04-08", "ListClusterServiceConfigVersion", "", "")
	return
}

func CreateListClusterServiceConfigVersionResponse() (response *ListClusterServiceConfigVersionResponse) {
	response = &ListClusterServiceConfigVersionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
