package emr

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ListClusterServiceConfig(request *ListClusterServiceConfigRequest) (response *ListClusterServiceConfigResponse, err error) {
	response = CreateListClusterServiceConfigResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ListClusterServiceConfigWithChan(request *ListClusterServiceConfigRequest) (<-chan *ListClusterServiceConfigResponse, <-chan error) {
	responseChan := make(chan *ListClusterServiceConfigResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListClusterServiceConfig(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ListClusterServiceConfigWithCallback(request *ListClusterServiceConfigRequest, callback func(response *ListClusterServiceConfigResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListClusterServiceConfigResponse
		var err error
		defer close(result)
		response, err = client.ListClusterServiceConfig(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ListClusterServiceConfigRequest struct {
	*requests.RpcRequest
	ConfigVersion   string `position:"Query" name:"ConfigVersion"`
	ClusterId       string `position:"Query" name:"ClusterId"`
	ServiceName     string `position:"Query" name:"ServiceName"`
	TagValue        string `position:"Query" name:"TagValue"`
	GroupId         string `position:"Query" name:"GroupId"`
	ResourceOwnerId string `position:"Query" name:"ResourceOwnerId"`
}

type ListClusterServiceConfigResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Configs   []struct {
		ServiceName     string `json:"ServiceName" xml:"ServiceName"`
		ConfigVersion   string `json:"ConfigVersion" xml:"ConfigVersion"`
		Applied         string `json:"Applied" xml:"Applied"`
		CreateTime      string `json:"CreateTime" xml:"CreateTime"`
		Author          string `json:"Author" xml:"Author"`
		Comment         string `json:"Comment" xml:"Comment"`
		ConfigValueList []struct {
			ConfigName          string `json:"ConfigName" xml:"ConfigName"`
			AllowCustom         bool   `json:"AllowCustom" xml:"AllowCustom"`
			ConfigItemValueList []struct {
				ItemName    string `json:"ItemName" xml:"ItemName"`
				Value       string `json:"Value" xml:"Value"`
				IsCustom    bool   `json:"IsCustom" xml:"IsCustom"`
				Description string `json:"Description" xml:"Description"`
			} `json:"ConfigItemValueList" xml:"ConfigItemValueList"`
		} `json:"ConfigValueList" xml:"ConfigValueList"`
		PropertyInfoList []struct {
			Name                    string   `json:"Name" xml:"Name"`
			Value                   string   `json:"Value" xml:"Value"`
			Description             string   `json:"Description" xml:"Description"`
			FileName                string   `json:"FileName" xml:"FileName"`
			DisplayName             string   `json:"DisplayName" xml:"DisplayName"`
			ServiceName             string   `json:"ServiceName" xml:"ServiceName"`
			Component               string   `json:"Component" xml:"Component"`
			PropertyTypes           []string `json:"PropertyTypes" xml:"PropertyTypes"`
			PropertyValueAttributes struct {
				Type          string `json:"Type" xml:"Type"`
				Maximum       string `json:"Maximum" xml:"Maximum"`
				Mimimum       string `json:"Mimimum" xml:"Mimimum"`
				Unit          string `json:"Unit" xml:"Unit"`
				ReadOnly      bool   `json:"ReadOnly" xml:"ReadOnly"`
				Hidden        bool   `json:"Hidden" xml:"Hidden"`
				IncrememtStep string `json:"IncrememtStep" xml:"IncrememtStep"`
				Entries       []struct {
					Value       string `json:"Value" xml:"Value"`
					Label       string `json:"Label" xml:"Label"`
					Description string `json:"Description" xml:"Description"`
				} `json:"Entries" xml:"Entries"`
			} `json:"PropertyValueAttributes" xml:"PropertyValueAttributes"`
			EffectWay struct {
				EffectType        string `json:"EffectType" xml:"EffectType"`
				InvokeServiceName string `json:"InvokeServiceName" xml:"InvokeServiceName"`
			} `json:"EffectWay" xml:"EffectWay"`
		} `json:"PropertyInfoList" xml:"PropertyInfoList"`
	} `json:"Configs" xml:"Configs"`
}

func CreateListClusterServiceConfigRequest() (request *ListClusterServiceConfigRequest) {
	request = &ListClusterServiceConfigRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Emr", "2016-04-08", "ListClusterServiceConfig", "", "")
	return
}

func CreateListClusterServiceConfigResponse() (response *ListClusterServiceConfigResponse) {
	response = &ListClusterServiceConfigResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
