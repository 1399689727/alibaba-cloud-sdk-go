package vod

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeUserTopVideoByDay(request *DescribeUserTopVideoByDayRequest) (response *DescribeUserTopVideoByDayResponse, err error) {
	response = CreateDescribeUserTopVideoByDayResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeUserTopVideoByDayWithChan(request *DescribeUserTopVideoByDayRequest) (<-chan *DescribeUserTopVideoByDayResponse, <-chan error) {
	responseChan := make(chan *DescribeUserTopVideoByDayResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeUserTopVideoByDay(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeUserTopVideoByDayWithCallback(request *DescribeUserTopVideoByDayRequest, callback func(response *DescribeUserTopVideoByDayResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeUserTopVideoByDayResponse
		var err error
		defer close(result)
		response, err = client.DescribeUserTopVideoByDay(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeUserTopVideoByDayRequest struct {
	*requests.RpcRequest
	VideoType     string `position:"Query" name:"VideoType"`
	BizDate       string `position:"Query" name:"BizDate"`
	OwnerId       string `position:"Query" name:"OwnerId"`
	SecurityToken string `position:"Query" name:"SecurityToken"`
	Version       string `position:"Query" name:"Version"`
}

type DescribeUserTopVideoByDayResponse struct {
	*responses.BaseResponse
	RequestId               string `json:"RequestId" xml:"RequestId"`
	UserPlayStatisticsInfos []struct {
		VV       string `json:"VV" xml:"VV"`
		UV       string `json:"UV" xml:"UV"`
		VideoId  string `json:"VideoId" xml:"VideoId"`
		PlayTime string `json:"PlayTime" xml:"PlayTime"`
		Title    string `json:"Title" xml:"Title"`
	} `json:"UserPlayStatisticsInfos" xml:"UserPlayStatisticsInfos"`
}

func CreateDescribeUserTopVideoByDayRequest() (request *DescribeUserTopVideoByDayRequest) {
	request = &DescribeUserTopVideoByDayRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("vod", "2017-07-13", "DescribeUserTopVideoByDay", "", "")
	return
}

func CreateDescribeUserTopVideoByDayResponse() (response *DescribeUserTopVideoByDayResponse) {
	response = &DescribeUserTopVideoByDayResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
