package cloudapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeApiSignatures(request *DescribeApiSignaturesRequest) (response *DescribeApiSignaturesResponse, err error) {
	response = CreateDescribeApiSignaturesResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeApiSignaturesWithChan(request *DescribeApiSignaturesRequest) (<-chan *DescribeApiSignaturesResponse, <-chan error) {
	responseChan := make(chan *DescribeApiSignaturesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeApiSignatures(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeApiSignaturesWithCallback(request *DescribeApiSignaturesRequest, callback func(response *DescribeApiSignaturesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeApiSignaturesResponse
		var err error
		defer close(result)
		response, err = client.DescribeApiSignatures(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeApiSignaturesRequest struct {
	*requests.RpcRequest
	ApiIds     string `position:"Query" name:"ApiIds"`
	PageSize   string `position:"Query" name:"PageSize"`
	PageNumber string `position:"Query" name:"PageNumber"`
	StageName  string `position:"Query" name:"StageName"`
	GroupId    string `position:"Query" name:"GroupId"`
}

type DescribeApiSignaturesResponse struct {
	*responses.BaseResponse
	RequestId     string `json:"RequestId" xml:"RequestId"`
	TotalCount    int    `json:"TotalCount" xml:"TotalCount"`
	PageSize      int    `json:"PageSize" xml:"PageSize"`
	PageNumber    int    `json:"PageNumber" xml:"PageNumber"`
	ApiSignatures []struct {
		ApiId         string `json:"ApiId" xml:"ApiId"`
		ApiName       string `json:"ApiName" xml:"ApiName"`
		SignatureId   string `json:"SignatureId" xml:"SignatureId"`
		SignatureName string `json:"SignatureName" xml:"SignatureName"`
		BoundTime     string `json:"BoundTime" xml:"BoundTime"`
	} `json:"ApiSignatures" xml:"ApiSignatures"`
}

func CreateDescribeApiSignaturesRequest() (request *DescribeApiSignaturesRequest) {
	request = &DescribeApiSignaturesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("CloudAPI", "2016-07-14", "DescribeApiSignatures", "", "")
	return
}

func CreateDescribeApiSignaturesResponse() (response *DescribeApiSignaturesResponse) {
	response = &DescribeApiSignaturesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
