package cloudapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeApiTrafficControls(request *DescribeApiTrafficControlsRequest) (response *DescribeApiTrafficControlsResponse, err error) {
	response = CreateDescribeApiTrafficControlsResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeApiTrafficControlsWithChan(request *DescribeApiTrafficControlsRequest) (<-chan *DescribeApiTrafficControlsResponse, <-chan error) {
	responseChan := make(chan *DescribeApiTrafficControlsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeApiTrafficControls(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeApiTrafficControlsWithCallback(request *DescribeApiTrafficControlsRequest, callback func(response *DescribeApiTrafficControlsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeApiTrafficControlsResponse
		var err error
		defer close(result)
		response, err = client.DescribeApiTrafficControls(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeApiTrafficControlsRequest struct {
	*requests.RpcRequest
	ApiIds     string `position:"Query" name:"ApiIds"`
	PageSize   string `position:"Query" name:"PageSize"`
	PageNumber string `position:"Query" name:"PageNumber"`
	StageName  string `position:"Query" name:"StageName"`
	GroupId    string `position:"Query" name:"GroupId"`
}

type DescribeApiTrafficControlsResponse struct {
	*responses.BaseResponse
	RequestId          string `json:"RequestId" xml:"RequestId"`
	TotalCount         int    `json:"TotalCount" xml:"TotalCount"`
	PageSize           int    `json:"PageSize" xml:"PageSize"`
	PageNumber         int    `json:"PageNumber" xml:"PageNumber"`
	ApiTrafficControls []struct {
		ApiId              string `json:"ApiId" xml:"ApiId"`
		ApiName            string `json:"ApiName" xml:"ApiName"`
		TrafficControlId   string `json:"TrafficControlId" xml:"TrafficControlId"`
		TrafficControlName string `json:"TrafficControlName" xml:"TrafficControlName"`
		BoundTime          string `json:"BoundTime" xml:"BoundTime"`
	} `json:"ApiTrafficControls" xml:"ApiTrafficControls"`
}

func CreateDescribeApiTrafficControlsRequest() (request *DescribeApiTrafficControlsRequest) {
	request = &DescribeApiTrafficControlsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("CloudAPI", "2016-07-14", "DescribeApiTrafficControls", "", "")
	return
}

func CreateDescribeApiTrafficControlsResponse() (response *DescribeApiTrafficControlsResponse) {
	response = &DescribeApiTrafficControlsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
