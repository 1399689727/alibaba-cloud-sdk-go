package cloudapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeApisBySignature(request *DescribeApisBySignatureRequest) (response *DescribeApisBySignatureResponse, err error) {
	response = CreateDescribeApisBySignatureResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeApisBySignatureWithChan(request *DescribeApisBySignatureRequest) (<-chan *DescribeApisBySignatureResponse, <-chan error) {
	responseChan := make(chan *DescribeApisBySignatureResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeApisBySignature(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeApisBySignatureWithCallback(request *DescribeApisBySignatureRequest, callback func(response *DescribeApisBySignatureResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeApisBySignatureResponse
		var err error
		defer close(result)
		response, err = client.DescribeApisBySignature(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeApisBySignatureRequest struct {
	*requests.RpcRequest
	PageSize    string `position:"Query" name:"PageSize"`
	PageNumber  string `position:"Query" name:"PageNumber"`
	SignatureId string `position:"Query" name:"SignatureId"`
}

type DescribeApisBySignatureResponse struct {
	*responses.BaseResponse
	RequestId  string `json:"RequestId" xml:"RequestId"`
	TotalCount int    `json:"TotalCount" xml:"TotalCount"`
	PageSize   int    `json:"PageSize" xml:"PageSize"`
	PageNumber int    `json:"PageNumber" xml:"PageNumber"`
	ApiInfos   []struct {
		RegionId    string `json:"RegionId" xml:"RegionId"`
		GroupId     string `json:"GroupId" xml:"GroupId"`
		GroupName   string `json:"GroupName" xml:"GroupName"`
		StageName   string `json:"StageName" xml:"StageName"`
		ApiId       string `json:"ApiId" xml:"ApiId"`
		ApiName     string `json:"ApiName" xml:"ApiName"`
		Description string `json:"Description" xml:"Description"`
		Visibility  string `json:"Visibility" xml:"Visibility"`
		BoundTime   string `json:"BoundTime" xml:"BoundTime"`
	} `json:"ApiInfos" xml:"ApiInfos"`
}

func CreateDescribeApisBySignatureRequest() (request *DescribeApisBySignatureRequest) {
	request = &DescribeApisBySignatureRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("CloudAPI", "2016-07-14", "DescribeApisBySignature", "", "")
	return
}

func CreateDescribeApisBySignatureResponse() (response *DescribeApisBySignatureResponse) {
	response = &DescribeApisBySignatureResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
