package cloudapi

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribePurchasedApiGroups(request *DescribePurchasedApiGroupsRequest) (response *DescribePurchasedApiGroupsResponse, err error) {
	response = CreateDescribePurchasedApiGroupsResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribePurchasedApiGroupsWithChan(request *DescribePurchasedApiGroupsRequest) (<-chan *DescribePurchasedApiGroupsResponse, <-chan error) {
	responseChan := make(chan *DescribePurchasedApiGroupsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribePurchasedApiGroups(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribePurchasedApiGroupsWithCallback(request *DescribePurchasedApiGroupsRequest, callback func(response *DescribePurchasedApiGroupsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribePurchasedApiGroupsResponse
		var err error
		defer close(result)
		response, err = client.DescribePurchasedApiGroups(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribePurchasedApiGroupsRequest struct {
	*requests.RpcRequest
	PageSize   string `position:"Query" name:"PageSize"`
	PageNumber string `position:"Query" name:"PageNumber"`
}

type DescribePurchasedApiGroupsResponse struct {
	*responses.BaseResponse
	RequestId                   string `json:"RequestId" xml:"RequestId"`
	TotalCount                  int    `json:"TotalCount" xml:"TotalCount"`
	PageSize                    int    `json:"PageSize" xml:"PageSize"`
	PageNumber                  int    `json:"PageNumber" xml:"PageNumber"`
	PurchasedApiGroupAttributes []struct {
		GroupId        string `json:"GroupId" xml:"GroupId"`
		GroupName      string `json:"GroupName" xml:"GroupName"`
		Description    string `json:"Description" xml:"Description"`
		PurchasedTime  string `json:"PurchasedTime" xml:"PurchasedTime"`
		ExpireTime     string `json:"ExpireTime" xml:"ExpireTime"`
		RegionId       string `json:"RegionId" xml:"RegionId"`
		BillingType    string `json:"BillingType" xml:"BillingType"`
		InvokeTimesMax int64  `json:"InvokeTimesMax" xml:"InvokeTimesMax"`
		InvokeTimesNow int64  `json:"InvokeTimesNow" xml:"InvokeTimesNow"`
	} `json:"PurchasedApiGroupAttributes" xml:"PurchasedApiGroupAttributes"`
}

func CreateDescribePurchasedApiGroupsRequest() (request *DescribePurchasedApiGroupsRequest) {
	request = &DescribePurchasedApiGroupsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("CloudAPI", "2016-07-14", "DescribePurchasedApiGroups", "", "")
	return
}

func CreateDescribePurchasedApiGroupsResponse() (response *DescribePurchasedApiGroupsResponse) {
	response = &DescribePurchasedApiGroupsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
