//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package rtc

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetMPULayoutInfo invokes the rtc.GetMPULayoutInfo API synchronously
// api document: https://help.aliyun.com/api/rtc/getmpulayoutinfo.html
func (client *Client) GetMPULayoutInfo(request *GetMPULayoutInfoRequest) (response *GetMPULayoutInfoResponse, err error) {
	response = CreateGetMPULayoutInfoResponse()
	err = client.DoAction(request, response)
	return
}

// GetMPULayoutInfoWithChan invokes the rtc.GetMPULayoutInfo API asynchronously
// api document: https://help.aliyun.com/api/rtc/getmpulayoutinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetMPULayoutInfoWithChan(request *GetMPULayoutInfoRequest) (<-chan *GetMPULayoutInfoResponse, <-chan error) {
	responseChan := make(chan *GetMPULayoutInfoResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetMPULayoutInfo(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetMPULayoutInfoWithCallback invokes the rtc.GetMPULayoutInfo API asynchronously
// api document: https://help.aliyun.com/api/rtc/getmpulayoutinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetMPULayoutInfoWithCallback(request *GetMPULayoutInfoRequest, callback func(response *GetMPULayoutInfoResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetMPULayoutInfoResponse
		var err error
		defer close(result)
		response, err = client.GetMPULayoutInfo(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetMPULayoutInfoRequest is the request struct for api GetMPULayoutInfo
type GetMPULayoutInfoRequest struct {
	*requests.RpcRequest
	OwnerId  requests.Integer `position:"Query" name:"OwnerId"`
	AppId    string           `position:"Query" name:"AppId"`
	LayoutId requests.Integer `position:"Query" name:"LayoutId"`
}

// GetMPULayoutInfoResponse is the response struct for api GetMPULayoutInfo
type GetMPULayoutInfoResponse struct {
	*responses.BaseResponse
	RequestId string                  `json:"RequestId" xml:"RequestId"`
	Layout    GetMPULayoutInfoLayout0 `json:"Layout" xml:"Layout"`
}

type GetMPULayoutInfoLayout0 struct {
	LayoutId      int64                    `json:"LayoutId" xml:"LayoutId"`
	CropMode      int                      `json:"CropMode" xml:"CropMode"`
	AudioMixCount int                      `json:"AudioMixCount" xml:"AudioMixCount"`
	Panes         []GetMPULayoutInfoPanes1 `json:"Panes" xml:"Panes"`
}

type GetMPULayoutInfoPanes1 struct {
	Panes []GetMPULayoutInfoPanes2 `json:"Panes" xml:"Panes"`
}

type GetMPULayoutInfoPanes2 struct {
	PaneId    int     `json:"PaneId" xml:"PaneId"`
	MajorPane int     `json:"MajorPane" xml:"MajorPane"`
	X         float32 `json:"X" xml:"X"`
	Y         float32 `json:"Y" xml:"Y"`
	Width     float32 `json:"Width" xml:"Width"`
	Height    float32 `json:"Height" xml:"Height"`
	ZOrder    int     `json:"ZOrder" xml:"ZOrder"`
}

// CreateGetMPULayoutInfoRequest creates a request to invoke GetMPULayoutInfo API
func CreateGetMPULayoutInfoRequest() (request *GetMPULayoutInfoRequest) {
	request = &GetMPULayoutInfoRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("rtc", "2018-01-11", "GetMPULayoutInfo", "rtc", "openAPI")
	return
}

// CreateGetMPULayoutInfoResponse creates a response to parse from GetMPULayoutInfo response
func CreateGetMPULayoutInfoResponse() (response *GetMPULayoutInfoResponse) {
	response = &GetMPULayoutInfoResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
