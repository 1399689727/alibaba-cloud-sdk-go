package mts

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) SubmitEditingJobs(request *SubmitEditingJobsRequest) (response *SubmitEditingJobsResponse, err error) {
	response = CreateSubmitEditingJobsResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) SubmitEditingJobsWithChan(request *SubmitEditingJobsRequest) (<-chan *SubmitEditingJobsResponse, <-chan error) {
	responseChan := make(chan *SubmitEditingJobsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SubmitEditingJobs(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) SubmitEditingJobsWithCallback(request *SubmitEditingJobsRequest, callback func(response *SubmitEditingJobsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SubmitEditingJobsResponse
		var err error
		defer close(result)
		response, err = client.SubmitEditingJobs(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type SubmitEditingJobsRequest struct {
	*requests.RpcRequest
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	EditingInputs        string           `position:"Query" name:"EditingInputs"`
	EditingJobOutputs    string           `position:"Query" name:"EditingJobOutputs"`
	OutputBucket         string           `position:"Query" name:"OutputBucket"`
	OutputLocation       string           `position:"Query" name:"OutputLocation"`
	PipelineId           string           `position:"Query" name:"PipelineId"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
}

type SubmitEditingJobsResponse struct {
	*responses.BaseResponse
	RequestId     string        `json:"RequestId" xml:"RequestId"`
	JobResultList JobResultList `json:"JobResultList" xml:"JobResultList"`
}

func CreateSubmitEditingJobsRequest() (request *SubmitEditingJobsRequest) {
	request = &SubmitEditingJobsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Mts", "2014-06-18", "SubmitEditingJobs", "", "")
	return
}

func CreateSubmitEditingJobsResponse() (response *SubmitEditingJobsResponse) {
	response = &SubmitEditingJobsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
