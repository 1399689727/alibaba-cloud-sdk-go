package mts

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) QueryCoverJobList(request *QueryCoverJobListRequest) (response *QueryCoverJobListResponse, err error) {
	response = CreateQueryCoverJobListResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) QueryCoverJobListWithChan(request *QueryCoverJobListRequest) (<-chan *QueryCoverJobListResponse, <-chan error) {
	responseChan := make(chan *QueryCoverJobListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.QueryCoverJobList(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) QueryCoverJobListWithCallback(request *QueryCoverJobListRequest, callback func(response *QueryCoverJobListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *QueryCoverJobListResponse
		var err error
		defer close(result)
		response, err = client.QueryCoverJobList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type QueryCoverJobListRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      string `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string `position:"Query" name:"OwnerAccount"`
	Action               string `position:"Query" name:"Action"`
	OwnerId              string `position:"Query" name:"OwnerId"`
	AccessKeyId          string `position:"Query" name:"AccessKeyId"`
	CoverJobIds          string `position:"Query" name:"CoverJobIds"`
}

type QueryCoverJobListResponse struct {
	*responses.BaseResponse
	RequestId    string   `json:"RequestId"`
	NonExistIds  []string `json:"NonExistIds"`
	CoverJobList []struct {
		Id           string `json:"Id"`
		UserData     string `json:"UserData"`
		PipelineId   string `json:"PipelineId"`
		State        string `json:"State"`
		Code         string `json:"Code"`
		Message      string `json:"Message"`
		CreationTime string `json:"CreationTime"`
		Input        struct {
			Bucket   string `json:"Bucket"`
			Location string `json:"Location"`
			Object   string `json:"Object"`
		} `json:"Input"`
		CoverConfig struct {
			OutputFile struct {
				Bucket   string `json:"Bucket"`
				Location string `json:"Location"`
				Object   string `json:"Object"`
			} `json:"OutputFile"`
		} `json:"CoverConfig"`
		CoverImageList []struct {
			Score string `json:"Score"`
			Url   string `json:"Url"`
			Time  string `json:"Time"`
		} `json:"CoverImageList"`
	} `json:"CoverJobList"`
}

func CreateQueryCoverJobListRequest() (request *QueryCoverJobListRequest) {
	request = &QueryCoverJobListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Mts", "2014-06-18", "QueryCoverJobList", "", "")
	return
}

func CreateQueryCoverJobListResponse() (response *QueryCoverJobListResponse) {
	response = &QueryCoverJobListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
