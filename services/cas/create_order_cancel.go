package cas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateOrderCancel invokes the cas.CreateOrderCancel API synchronously
// api document: https://help.aliyun.com/api/cas/createordercancel.html
func (client *Client) CreateOrderCancel(request *CreateOrderCancelRequest) (response *CreateOrderCancelResponse, err error) {
	response = CreateCreateOrderCancelResponse()
	err = client.DoAction(request, response)
	return
}

// CreateOrderCancelWithChan invokes the cas.CreateOrderCancel API asynchronously
// api document: https://help.aliyun.com/api/cas/createordercancel.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateOrderCancelWithChan(request *CreateOrderCancelRequest) (<-chan *CreateOrderCancelResponse, <-chan error) {
	responseChan := make(chan *CreateOrderCancelResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateOrderCancel(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateOrderCancelWithCallback invokes the cas.CreateOrderCancel API asynchronously
// api document: https://help.aliyun.com/api/cas/createordercancel.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateOrderCancelWithCallback(request *CreateOrderCancelRequest, callback func(response *CreateOrderCancelResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateOrderCancelResponse
		var err error
		defer close(result)
		response, err = client.CreateOrderCancel(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateOrderCancelRequest is the request struct for api CreateOrderCancel
type CreateOrderCancelRequest struct {
	*requests.RpcRequest
	SourceIp string           `position:"Query" name:"SourceIp"`
	OrderId  requests.Integer `position:"Query" name:"OrderId"`
	Lang     string           `position:"Query" name:"Lang"`
}

// CreateOrderCancelResponse is the response struct for api CreateOrderCancel
type CreateOrderCancelResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateCreateOrderCancelRequest creates a request to invoke CreateOrderCancel API
func CreateCreateOrderCancelRequest() (request *CreateOrderCancelRequest) {
	request = &CreateOrderCancelRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cas", "2018-08-13", "CreateOrderCancel", "cas_esign_fdd", "openAPI")
	return
}

// CreateCreateOrderCancelResponse creates a response to parse from CreateOrderCancel response
func CreateCreateOrderCancelResponse() (response *CreateOrderCancelResponse) {
	response = &CreateOrderCancelResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
