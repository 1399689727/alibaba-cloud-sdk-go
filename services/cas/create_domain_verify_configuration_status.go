package cas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateDomainVerifyConfigurationStatus invokes the cas.CreateDomainVerifyConfigurationStatus API synchronously
// api document: https://help.aliyun.com/api/cas/createdomainverifyconfigurationstatus.html
func (client *Client) CreateDomainVerifyConfigurationStatus(request *CreateDomainVerifyConfigurationStatusRequest) (response *CreateDomainVerifyConfigurationStatusResponse, err error) {
	response = CreateCreateDomainVerifyConfigurationStatusResponse()
	err = client.DoAction(request, response)
	return
}

// CreateDomainVerifyConfigurationStatusWithChan invokes the cas.CreateDomainVerifyConfigurationStatus API asynchronously
// api document: https://help.aliyun.com/api/cas/createdomainverifyconfigurationstatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDomainVerifyConfigurationStatusWithChan(request *CreateDomainVerifyConfigurationStatusRequest) (<-chan *CreateDomainVerifyConfigurationStatusResponse, <-chan error) {
	responseChan := make(chan *CreateDomainVerifyConfigurationStatusResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateDomainVerifyConfigurationStatus(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateDomainVerifyConfigurationStatusWithCallback invokes the cas.CreateDomainVerifyConfigurationStatus API asynchronously
// api document: https://help.aliyun.com/api/cas/createdomainverifyconfigurationstatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) CreateDomainVerifyConfigurationStatusWithCallback(request *CreateDomainVerifyConfigurationStatusRequest, callback func(response *CreateDomainVerifyConfigurationStatusResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateDomainVerifyConfigurationStatusResponse
		var err error
		defer close(result)
		response, err = client.CreateDomainVerifyConfigurationStatus(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateDomainVerifyConfigurationStatusRequest is the request struct for api CreateDomainVerifyConfigurationStatus
type CreateDomainVerifyConfigurationStatusRequest struct {
	*requests.RpcRequest
	SourceIp string           `position:"Query" name:"SourceIp"`
	OrderId  requests.Integer `position:"Query" name:"OrderId"`
	Lang     string           `position:"Query" name:"Lang"`
	Type     string           `position:"Query" name:"Type"`
}

// CreateDomainVerifyConfigurationStatusResponse is the response struct for api CreateDomainVerifyConfigurationStatus
type CreateDomainVerifyConfigurationStatusResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateCreateDomainVerifyConfigurationStatusRequest creates a request to invoke CreateDomainVerifyConfigurationStatus API
func CreateCreateDomainVerifyConfigurationStatusRequest() (request *CreateDomainVerifyConfigurationStatusRequest) {
	request = &CreateDomainVerifyConfigurationStatusRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cas", "2018-08-13", "CreateDomainVerifyConfigurationStatus", "cas_esign_fdd", "openAPI")
	return
}

// CreateCreateDomainVerifyConfigurationStatusResponse creates a response to parse from CreateDomainVerifyConfigurationStatus response
func CreateCreateDomainVerifyConfigurationStatusResponse() (response *CreateDomainVerifyConfigurationStatusResponse) {
	response = &CreateDomainVerifyConfigurationStatusResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
