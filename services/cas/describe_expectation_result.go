package cas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeExpectationResult invokes the cas.DescribeExpectationResult API synchronously
// api document: https://help.aliyun.com/api/cas/describeexpectationresult.html
func (client *Client) DescribeExpectationResult(request *DescribeExpectationResultRequest) (response *DescribeExpectationResultResponse, err error) {
	response = CreateDescribeExpectationResultResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeExpectationResultWithChan invokes the cas.DescribeExpectationResult API asynchronously
// api document: https://help.aliyun.com/api/cas/describeexpectationresult.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeExpectationResultWithChan(request *DescribeExpectationResultRequest) (<-chan *DescribeExpectationResultResponse, <-chan error) {
	responseChan := make(chan *DescribeExpectationResultResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeExpectationResult(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeExpectationResultWithCallback invokes the cas.DescribeExpectationResult API asynchronously
// api document: https://help.aliyun.com/api/cas/describeexpectationresult.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeExpectationResultWithCallback(request *DescribeExpectationResultRequest, callback func(response *DescribeExpectationResultResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeExpectationResultResponse
		var err error
		defer close(result)
		response, err = client.DescribeExpectationResult(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeExpectationResultRequest is the request struct for api DescribeExpectationResult
type DescribeExpectationResultRequest struct {
	*requests.RpcRequest
	SourceIp        string           `position:"Query" name:"SourceIp"`
	OrderId         requests.Integer `position:"Query" name:"OrderId"`
	ExpectationType string           `position:"Query" name:"ExpectationType"`
	Lang            string           `position:"Query" name:"Lang"`
}

// DescribeExpectationResultResponse is the response struct for api DescribeExpectationResult
type DescribeExpectationResultResponse struct {
	*responses.BaseResponse
	RequestId       string `json:"RequestId" xml:"RequestId"`
	ExpectationType string `json:"ExpectationType" xml:"ExpectationType"`
	ErrorMessage    string `json:"ErrorMessage" xml:"ErrorMessage"`
	ProcessStatus   string `json:"ProcessStatus" xml:"ProcessStatus"`
	CheckName       string `json:"CheckName" xml:"CheckName"`
	CheckValue      string `json:"CheckValue" xml:"CheckValue"`
	ModifiedTime    string `json:"ModifiedTime" xml:"ModifiedTime"`
	CheckType       string `json:"CheckType" xml:"CheckType"`
	CheckName1      string `json:"CheckName1" xml:"CheckName1"`
	CheckName2      string `json:"CheckName2" xml:"CheckName2"`
}

// CreateDescribeExpectationResultRequest creates a request to invoke DescribeExpectationResult API
func CreateDescribeExpectationResultRequest() (request *DescribeExpectationResultRequest) {
	request = &DescribeExpectationResultRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cas", "2018-08-13", "DescribeExpectationResult", "cas_esign_fdd", "openAPI")
	return
}

// CreateDescribeExpectationResultResponse creates a response to parse from DescribeExpectationResult response
func CreateDescribeExpectationResultResponse() (response *DescribeExpectationResultResponse) {
	response = &DescribeExpectationResultResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
