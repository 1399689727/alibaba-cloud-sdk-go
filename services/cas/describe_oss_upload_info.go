package cas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeOSSUploadInfo invokes the cas.DescribeOSSUploadInfo API synchronously
// api document: https://help.aliyun.com/api/cas/describeossuploadinfo.html
func (client *Client) DescribeOSSUploadInfo(request *DescribeOSSUploadInfoRequest) (response *DescribeOSSUploadInfoResponse, err error) {
	response = CreateDescribeOSSUploadInfoResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeOSSUploadInfoWithChan invokes the cas.DescribeOSSUploadInfo API asynchronously
// api document: https://help.aliyun.com/api/cas/describeossuploadinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeOSSUploadInfoWithChan(request *DescribeOSSUploadInfoRequest) (<-chan *DescribeOSSUploadInfoResponse, <-chan error) {
	responseChan := make(chan *DescribeOSSUploadInfoResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeOSSUploadInfo(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeOSSUploadInfoWithCallback invokes the cas.DescribeOSSUploadInfo API asynchronously
// api document: https://help.aliyun.com/api/cas/describeossuploadinfo.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeOSSUploadInfoWithCallback(request *DescribeOSSUploadInfoRequest, callback func(response *DescribeOSSUploadInfoResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeOSSUploadInfoResponse
		var err error
		defer close(result)
		response, err = client.DescribeOSSUploadInfo(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeOSSUploadInfoRequest is the request struct for api DescribeOSSUploadInfo
type DescribeOSSUploadInfoRequest struct {
	*requests.RpcRequest
	SourceIp     string           `position:"Query" name:"SourceIp"`
	OrderId      requests.Integer `position:"Query" name:"OrderId"`
	DocumentType requests.Integer `position:"Query" name:"DocumentType"`
	Lang         string           `position:"Query" name:"Lang"`
}

// DescribeOSSUploadInfoResponse is the response struct for api DescribeOSSUploadInfo
type DescribeOSSUploadInfoResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	AccessId  string `json:"AccessId" xml:"AccessId"`
	Policy    string `json:"Policy" xml:"Policy"`
	Signature string `json:"Signature" xml:"Signature"`
	Key       string `json:"Key" xml:"Key"`
	Host      string `json:"Host" xml:"Host"`
	Expire    int    `json:"Expire" xml:"Expire"`
}

// CreateDescribeOSSUploadInfoRequest creates a request to invoke DescribeOSSUploadInfo API
func CreateDescribeOSSUploadInfoRequest() (request *DescribeOSSUploadInfoRequest) {
	request = &DescribeOSSUploadInfoRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cas", "2018-08-13", "DescribeOSSUploadInfo", "cas_esign_fdd", "openAPI")
	return
}

// CreateDescribeOSSUploadInfoResponse creates a response to parse from DescribeOSSUploadInfo response
func CreateDescribeOSSUploadInfoResponse() (response *DescribeOSSUploadInfoResponse) {
	response = &DescribeOSSUploadInfoResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
