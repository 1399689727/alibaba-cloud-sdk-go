package cas

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeSignatureCapacity invokes the cas.DescribeSignatureCapacity API synchronously
// api document: https://help.aliyun.com/api/cas/describesignaturecapacity.html
func (client *Client) DescribeSignatureCapacity(request *DescribeSignatureCapacityRequest) (response *DescribeSignatureCapacityResponse, err error) {
	response = CreateDescribeSignatureCapacityResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeSignatureCapacityWithChan invokes the cas.DescribeSignatureCapacity API asynchronously
// api document: https://help.aliyun.com/api/cas/describesignaturecapacity.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeSignatureCapacityWithChan(request *DescribeSignatureCapacityRequest) (<-chan *DescribeSignatureCapacityResponse, <-chan error) {
	responseChan := make(chan *DescribeSignatureCapacityResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeSignatureCapacity(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeSignatureCapacityWithCallback invokes the cas.DescribeSignatureCapacity API asynchronously
// api document: https://help.aliyun.com/api/cas/describesignaturecapacity.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeSignatureCapacityWithCallback(request *DescribeSignatureCapacityRequest, callback func(response *DescribeSignatureCapacityResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeSignatureCapacityResponse
		var err error
		defer close(result)
		response, err = client.DescribeSignatureCapacity(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeSignatureCapacityRequest is the request struct for api DescribeSignatureCapacity
type DescribeSignatureCapacityRequest struct {
	*requests.RpcRequest
	SourceIp string `position:"Query" name:"SourceIp"`
	Lang     string `position:"Query" name:"Lang"`
}

// DescribeSignatureCapacityResponse is the response struct for api DescribeSignatureCapacity
type DescribeSignatureCapacityResponse struct {
	*responses.BaseResponse
	RequestId   string `json:"RequestId" xml:"RequestId"`
	RemainCount int    `json:"RemainCount" xml:"RemainCount"`
	UsedCount   int    `json:"UsedCount" xml:"UsedCount"`
	TotalCount  int    `json:"TotalCount" xml:"TotalCount"`
}

// CreateDescribeSignatureCapacityRequest creates a request to invoke DescribeSignatureCapacity API
func CreateDescribeSignatureCapacityRequest() (request *DescribeSignatureCapacityRequest) {
	request = &DescribeSignatureCapacityRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cas", "2018-08-13", "DescribeSignatureCapacity", "cas_esign_fdd", "openAPI")
	return
}

// CreateDescribeSignatureCapacityResponse creates a response to parse from DescribeSignatureCapacity response
func CreateDescribeSignatureCapacityResponse() (response *DescribeSignatureCapacityResponse) {
	response = &DescribeSignatureCapacityResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
