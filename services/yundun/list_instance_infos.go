package yundun

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) ListInstanceInfos(request *ListInstanceInfosRequest) (response *ListInstanceInfosResponse, err error) {
	response = CreateListInstanceInfosResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) ListInstanceInfosWithChan(request *ListInstanceInfosRequest) (<-chan *ListInstanceInfosResponse, <-chan error) {
	responseChan := make(chan *ListInstanceInfosResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListInstanceInfos(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) ListInstanceInfosWithCallback(request *ListInstanceInfosRequest, callback func(response *ListInstanceInfosResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListInstanceInfosResponse
		var err error
		defer close(result)
		response, err = client.ListInstanceInfos(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type ListInstanceInfosRequest struct {
	*requests.RpcRequest
	Region       string `position:"Query" name:"Region"`
	PageSize     string `position:"Query" name:"PageSize"`
	InstanceIds  string `position:"Query" name:"InstanceIds"`
	PageNumber   string `position:"Query" name:"PageNumber"`
	InstanceName string `position:"Query" name:"InstanceName"`
	EventType    string `position:"Query" name:"EventType"`
	InstanceType string `position:"Query" name:"InstanceType"`
	JstOwnerId   string `position:"Query" name:"JstOwnerId"`
}

type ListInstanceInfosResponse struct {
	*responses.BaseResponse
	RequestId  string `json:"RequestId" xml:"RequestId"`
	PageNumber int    `json:"PageNumber" xml:"PageNumber"`
	PageSize   int    `json:"PageSize" xml:"PageSize"`
	TotalCount int    `json:"TotalCount" xml:"TotalCount"`
	InfosList  []struct {
		Region       string `json:"Region" xml:"Region"`
		RegionName   string `json:"RegionName" xml:"RegionName"`
		RegionEnName string `json:"RegionEnName" xml:"RegionEnName"`
		InstanceName string `json:"InstanceName" xml:"InstanceName"`
		InstanceId   string `json:"InstanceId" xml:"InstanceId"`
		Ip           string `json:"Ip" xml:"Ip"`
		InternetIp   string `json:"InternetIp" xml:"InternetIp"`
		IntranetIp   string `json:"IntranetIp" xml:"IntranetIp"`
		Ddos         int    `json:"Ddos" xml:"Ddos"`
		HostEvent    int    `json:"HostEvent" xml:"HostEvent"`
		SecureCheck  int    `json:"SecureCheck" xml:"SecureCheck"`
		AegisStatus  int    `json:"AegisStatus" xml:"AegisStatus"`
		Waf          int    `json:"Waf" xml:"Waf"`
		IsLock       bool   `json:"IsLock" xml:"IsLock"`
		LockType     string `json:"LockType" xml:"LockType"`
		UnLockTimes  int    `json:"UnLockTimes" xml:"UnLockTimes"`
		TriggerTime  string `json:"TriggerTime" xml:"TriggerTime"`
	} `json:"InfosList" xml:"InfosList"`
}

func CreateListInstanceInfosRequest() (request *ListInstanceInfosRequest) {
	request = &ListInstanceInfosRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Yundun", "2015-04-16", "ListInstanceInfos", "", "")
	return
}

func CreateListInstanceInfosResponse() (response *ListInstanceInfosResponse) {
	response = &ListInstanceInfosResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
