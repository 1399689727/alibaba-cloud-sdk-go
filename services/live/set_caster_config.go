package live

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) SetCasterConfig(request *SetCasterConfigRequest) (response *SetCasterConfigResponse, err error) {
	response = CreateSetCasterConfigResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) SetCasterConfigWithChan(request *SetCasterConfigRequest) (<-chan *SetCasterConfigResponse, <-chan error) {
	responseChan := make(chan *SetCasterConfigResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SetCasterConfig(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) SetCasterConfigWithCallback(request *SetCasterConfigRequest, callback func(response *SetCasterConfigResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SetCasterConfigResponse
		var err error
		defer close(result)
		response, err = client.SetCasterConfig(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type SetCasterConfigRequest struct {
	*requests.RpcRequest
	TranscodeConfig  string `position:"Query" name:"TranscodeConfig"`
	DomainName       string `position:"Query" name:"DomainName"`
	UrgentMaterialId string `position:"Query" name:"UrgentMaterialId"`
	CasterName       string `position:"Query" name:"CasterName"`
	Delay            string `position:"Query" name:"Delay"`
	RecordConfig     string `position:"Query" name:"RecordConfig"`
	OwnerId          string `position:"Query" name:"OwnerId"`
	CasterId         string `position:"Query" name:"CasterId"`
	SecurityToken    string `position:"Query" name:"SecurityToken"`
	Version          string `position:"Query" name:"Version"`
}

type SetCasterConfigResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	CasterId  string `json:"CasterId" xml:"CasterId"`
}

func CreateSetCasterConfigRequest() (request *SetCasterConfigRequest) {
	request = &SetCasterConfigRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("live", "2016-11-01", "SetCasterConfig", "", "")
	return
}

func CreateSetCasterConfigResponse() (response *SetCasterConfigResponse) {
	response = &SetCasterConfigResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
