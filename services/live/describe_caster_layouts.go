package live

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) DescribeCasterLayouts(request *DescribeCasterLayoutsRequest) (response *DescribeCasterLayoutsResponse, err error) {
	response = CreateDescribeCasterLayoutsResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) DescribeCasterLayoutsWithChan(request *DescribeCasterLayoutsRequest) (<-chan *DescribeCasterLayoutsResponse, <-chan error) {
	responseChan := make(chan *DescribeCasterLayoutsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeCasterLayouts(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) DescribeCasterLayoutsWithCallback(request *DescribeCasterLayoutsRequest, callback func(response *DescribeCasterLayoutsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeCasterLayoutsResponse
		var err error
		defer close(result)
		response, err = client.DescribeCasterLayouts(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type DescribeCasterLayoutsRequest struct {
	*requests.RpcRequest
	OwnerId       string `position:"Query" name:"OwnerId"`
	CasterId      string `position:"Query" name:"CasterId"`
	SecurityToken string `position:"Query" name:"SecurityToken"`
	Version       string `position:"Query" name:"Version"`
}

type DescribeCasterLayoutsResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Total     int    `json:"Total" xml:"Total"`
	Layouts   []struct {
		LayoutId    string   `json:"LayoutId" xml:"LayoutId"`
		BlendList   []string `json:"BlendList" xml:"BlendList"`
		MixList     []string `json:"MixList" xml:"MixList"`
		VideoLayers []struct {
			HeightNormalized    float64  `json:"HeightNormalized" xml:"HeightNormalized"`
			WidthNormalized     float64  `json:"WidthNormalized" xml:"WidthNormalized"`
			PositionRefer       string   `json:"PositionRefer" xml:"PositionRefer"`
			PositionNormalizeds []string `json:"PositionNormalizeds" xml:"PositionNormalizeds"`
		} `json:"VideoLayers" xml:"VideoLayers"`
		AudioLayers []struct {
			VolumeRate   float64 `json:"VolumeRate" xml:"VolumeRate"`
			ValidChannel string  `json:"ValidChannel" xml:"ValidChannel"`
		} `json:"AudioLayers" xml:"AudioLayers"`
	} `json:"Layouts" xml:"Layouts"`
}

func CreateDescribeCasterLayoutsRequest() (request *DescribeCasterLayoutsRequest) {
	request = &DescribeCasterLayoutsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("live", "2016-11-01", "DescribeCasterLayouts", "", "")
	return
}

func CreateDescribeCasterLayoutsResponse() (response *DescribeCasterLayoutsResponse) {
	response = &DescribeCasterLayoutsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
